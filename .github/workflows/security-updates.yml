name: Security Updates

on:
  schedule:
    # V√©rifie les vuln√©rabilit√©s tous les jours √† 8h00 UTC
    - cron: '0 8 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: write
  issues: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run security audit
        id: audit
        run: |
          # Audit de s√©curit√© et capture des vuln√©rabilit√©s
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          # V√©rifier s'il y a des vuln√©rabilit√©s
          VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')
          echo "vulnerabilities_count=$VULNERABILITIES" >> $GITHUB_OUTPUT
          
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "security_issues=true" >> $GITHUB_OUTPUT
            # Cr√©er un r√©sum√© des vuln√©rabilit√©s
            cat audit-results.json | jq -r '.vulnerabilities // {} | to_entries[] | select(.value.severity == "high" or .value.severity == "critical") | "üö® **\(.value.severity | ascii_upcase)**: \(.key) - \(.value.title // "Pas de titre")"' > security_summary.txt
          else
            echo "security_issues=false" >> $GITHUB_OUTPUT
          fi

      - name: Attempt automatic fixes
        if: steps.audit.outputs.security_issues == 'true'
        run: |
          # Tenter de corriger automatiquement les vuln√©rabilit√©s
          npm audit fix --force || true
          
          # V√©rifier si des changements ont √©t√© apport√©s
          if [ -n "$(git status --porcelain)" ]; then
            echo "fixes_applied=true" >> $GITHUB_OUTPUT
          else
            echo "fixes_applied=false" >> $GITHUB_OUTPUT
          fi

      - name: Test after security fixes
        if: steps.audit.outputs.security_issues == 'true'
        run: |
          npm run build || echo "Build failed after security fixes"

      - name: Create Security PR
        if: steps.audit.outputs.security_issues == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: 'security: correction automatique des vuln√©rabilit√©s'
          title: 'üîí Corrections de s√©curit√© automatiques'
          body: |
            ## üõ°Ô∏è Corrections de s√©curit√©
            
            Cette PR contient des corrections automatiques pour les vuln√©rabilit√©s de s√©curit√© d√©tect√©es.
            
            ### Vuln√©rabilit√©s critiques/√©lev√©es d√©tect√©es:
            $(cat security_summary.txt || echo "Voir les d√©tails dans l'audit complet")
            
            ### üîß Actions effectu√©es:
            - [x] Audit de s√©curit√© complet
            - [x] Application des corrections automatiques
            - [x] Test de build
            
            ### ‚ö†Ô∏è ATTENTION:
            - [ ] **Testez soigneusement** l'application apr√®s ces changements
            - [ ] V√©rifiez que toutes les fonctionnalit√©s critiques fonctionnent
            - [ ] Ex√©cutez la suite de tests compl√®te
            
            ### üìä R√©sum√© de l'audit:
            - Vuln√©rabilit√©s totales: ${{ steps.audit.outputs.vulnerabilities_count }}
            
            ---
            
            ü§ñ PR g√©n√©r√©e automatiquement par l'audit de s√©curit√©.
          branch: security-fixes-${{ github.run_number }}
          delete-branch: true
          labels: |
            security
            automated
            urgent

      - name: Create security issue if no auto-fix
        if: steps.audit.outputs.security_issues == 'true' && steps.audit.outputs.fixes_applied == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let vulnerabilities = '';
            try {
              vulnerabilities = fs.readFileSync('security_summary.txt', 'utf8');
            } catch (e) {
              vulnerabilities = 'Voir les r√©sultats de l\'audit pour plus de d√©tails.';
            }
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Vuln√©rabilit√©s de s√©curit√© d√©tect√©es - Action manuelle requise',
              body: `## ‚ö†Ô∏è Vuln√©rabilit√©s de s√©curit√© d√©tect√©es
              
              Des vuln√©rabilit√©s de s√©curit√© ont √©t√© d√©tect√©es mais ne peuvent pas √™tre corrig√©es automatiquement.
              
              ### Vuln√©rabilit√©s critiques/√©lev√©es:
              ${vulnerabilities}
              
              ### Action requise:
              1. Examinez les vuln√©rabilit√©s dans l'onglet Security
              2. Mettez √† jour manuellement les d√©pendances concern√©es
              3. Testez l'application apr√®s les mises √† jour
              
              **Workflow:** ${context.workflow}
              **Run ID:** ${context.runId}`,
              labels: ['security', 'high-priority', 'manual-review-required']
            });